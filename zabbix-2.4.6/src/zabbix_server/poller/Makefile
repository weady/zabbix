# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/zabbix_server/poller/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/zabbix
pkgincludedir = $(includedir)/zabbix
pkglibdir = $(libdir)/zabbix
pkglibexecdir = $(libexecdir)/zabbix
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/zabbix_server/poller
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_lib_ibm_db2.m4 \
	$(top_srcdir)/m4/ax_lib_mysql.m4 \
	$(top_srcdir)/m4/ax_lib_oracle_oci.m4 \
	$(top_srcdir)/m4/ax_lib_postgresql.m4 \
	$(top_srcdir)/m4/ax_lib_sqlite3.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/jabber.m4 $(top_srcdir)/m4/ldap.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libssh2.m4 \
	$(top_srcdir)/m4/libunixodbc.m4 $(top_srcdir)/m4/libxml2.m4 \
	$(top_srcdir)/m4/netsnmp.m4 $(top_srcdir)/m4/openipmi.m4 \
	$(top_srcdir)/m4/resolv.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libzbxpoller_a_AR = $(AR) $(ARFLAGS)
libzbxpoller_a_LIBADD =
am__libzbxpoller_a_SOURCES_DIST = checks_agent.c checks_agent.h \
	checks_internal.c checks_internal.h checks_simple.c \
	checks_simple.h checks_simple_vmware.c checks_simple_vmware.h \
	checks_snmp.c checks_snmp.h checks_db.c checks_db.h \
	checks_aggregate.c checks_aggregate.h checks_external.c \
	checks_external.h checks_ipmi.c checks_ipmi.h checks_ssh.c \
	checks_ssh.h checks_telnet.c checks_telnet.h checks_java.c \
	checks_java.h checks_calculated.c checks_calculated.h poller.c \
	poller.h
#am__objects_1 = libzbxpoller_a-checks_db.$(OBJEXT)
am_libzbxpoller_a_OBJECTS = libzbxpoller_a-checks_agent.$(OBJEXT) \
	libzbxpoller_a-checks_internal.$(OBJEXT) \
	libzbxpoller_a-checks_simple.$(OBJEXT) \
	libzbxpoller_a-checks_simple_vmware.$(OBJEXT) \
	libzbxpoller_a-checks_snmp.$(OBJEXT) $(am__objects_1) \
	libzbxpoller_a-checks_aggregate.$(OBJEXT) \
	libzbxpoller_a-checks_external.$(OBJEXT) \
	libzbxpoller_a-checks_ipmi.$(OBJEXT) \
	libzbxpoller_a-checks_ssh.$(OBJEXT) \
	libzbxpoller_a-checks_telnet.$(OBJEXT) \
	libzbxpoller_a-checks_java.$(OBJEXT) \
	libzbxpoller_a-checks_calculated.$(OBJEXT) \
	libzbxpoller_a-poller.$(OBJEXT)
libzbxpoller_a_OBJECTS = $(am_libzbxpoller_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libzbxpoller_a_SOURCES)
DIST_SOURCES = $(am__libzbxpoller_a_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/local/src/zabbix-2.4.6/missing --run aclocal-1.11
AGENT_LDFLAGS =   
AGENT_LIBS =   
AMTAR = ${SHELL} /usr/local/src/zabbix-2.4.6/missing --run tar
ARCH = linux
AUTOCONF = ${SHELL} /usr/local/src/zabbix-2.4.6/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/local/src/zabbix-2.4.6/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/local/src/zabbix-2.4.6/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2   
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DB_CPPFLAGS = 
DB_LDFLAGS = 
DB_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
ICONV_CFLAGS = 
ICONV_LDFLAGS = 
IKSEMEL_CFLAGS = 
IKSEMEL_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JABBER_CPPFLAGS = 
JABBER_LDFLAGS = 
JABBER_LIBS = 
JAR = 
JAVAC = 
LDAP_CPPFLAGS = 
LDAP_LDFLAGS = 
LDAP_LIBS = 
LDFLAGS = -rdynamic  
LIBCURL_CFLAGS = 
LIBCURL_LDFLAGS = 
LIBCURL_LIBS = 
LIBOBJS = 
LIBS = -lm -ldl -lrt  -lresolv 
LIBXML2_CFLAGS = 
LIBXML2_CONFIG = 
LIBXML2_LDFLAGS = 
LIBXML2_LIBS = 
LIBXML2_VERSION = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /usr/local/src/zabbix-2.4.6/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_LDFLAGS = 
MYSQL_LIBS = 
MYSQL_VERSION = 
OBJEXT = o
ODBC_CONFIG = 
OPENIPMI_CFLAGS = 
OPENIPMI_LDFLAGS = 
OPENIPMI_LIBS = 
ORACLE_CPPFLAGS = 
ORACLE_LDFLAGS = 
ORACLE_LIBS = 
ORACLE_OCI_CFLAGS = 
ORACLE_OCI_LDFLAGS = 
ORACLE_OCI_LIBS = 
ORACLE_OCI_VERSION = 
PACKAGE = zabbix
PACKAGE_BUGREPORT = 
PACKAGE_NAME = Zabbix
PACKAGE_STRING = Zabbix 2.4.6
PACKAGE_TARNAME = zabbix
PACKAGE_VERSION = 2.4.6
PATH_SEPARATOR = :
PG_CONFIG = 
PKG_CONFIG = 
POSTGRESQL_CFLAGS = 
POSTGRESQL_LDFLAGS = 
POSTGRESQL_LIBS = 
POSTGRESQL_VERSION = 
PROXY_LDFLAGS =   
PROXY_LIBS =   
RANLIB = ranlib
RESOLV_LIBS = -lresolv
SERVER_LDFLAGS =   
SERVER_LIBS =   
SET_MAKE = 
SHELL = /bin/sh
SNMP_CFLAGS = 
SNMP_LDFLAGS = 
SNMP_LIBS = 
SQLITE3_CPPFLAGS = 
SQLITE3_LDFLAGS = 
SQLITE3_LIBS = 
SQLITE3_VERSION = 
SSH2_CFLAGS = 
SSH2_LDFLAGS = 
SSH2_LIBS = 
STRIP = 
UNIXODBC_CFLAGS = 
UNIXODBC_LDFLAGS = 
UNIXODBC_LIBS = 
VERSION = 2.4.6
_libcurl_config = no
_libnetsnmp_config = 
abs_builddir = /usr/local/src/zabbix-2.4.6/src/zabbix_server/poller
abs_srcdir = /usr/local/src/zabbix-2.4.6/src/zabbix_server/poller
abs_top_builddir = /usr/local/src/zabbix-2.4.6
abs_top_srcdir = /usr/local/src/zabbix-2.4.6
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /usr/local/src/zabbix-2.4.6/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/zabbix
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
noinst_LIBRARIES = libzbxpoller.a
CHECKS_DB_SRC = 
#CHECKS_DB_SRC = checks_db.c checks_db.h
libzbxpoller_a_SOURCES = \
	checks_agent.c checks_agent.h \
	checks_internal.c checks_internal.h \
	checks_simple.c checks_simple.h \
	checks_simple_vmware.c checks_simple_vmware.h \
	checks_snmp.c checks_snmp.h \
	${CHECKS_DB_SRC} \
	checks_aggregate.c checks_aggregate.h \
	checks_external.c checks_external.h \
	checks_ipmi.c checks_ipmi.h \
	checks_ssh.c checks_ssh.h \
	checks_telnet.c checks_telnet.h \
	checks_java.c checks_java.h \
	checks_calculated.c checks_calculated.h \
	poller.c poller.h

libzbxpoller_a_CFLAGS = -I../../../src/libs/zbxsysinfo/simple -I../../../src/libs/zbxdbcache
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/zabbix_server/poller/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/zabbix_server/poller/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libzbxpoller.a: $(libzbxpoller_a_OBJECTS) $(libzbxpoller_a_DEPENDENCIES) 
	-rm -f libzbxpoller.a
	$(libzbxpoller_a_AR) libzbxpoller.a $(libzbxpoller_a_OBJECTS) $(libzbxpoller_a_LIBADD)
	$(RANLIB) libzbxpoller.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libzbxpoller_a-checks_agent.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_aggregate.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_calculated.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_db.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_external.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_internal.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_ipmi.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_java.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_simple.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_snmp.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_ssh.Po
include ./$(DEPDIR)/libzbxpoller_a-checks_telnet.Po
include ./$(DEPDIR)/libzbxpoller_a-poller.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libzbxpoller_a-checks_agent.o: checks_agent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_agent.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_agent.Tpo -c -o libzbxpoller_a-checks_agent.o `test -f 'checks_agent.c' || echo '$(srcdir)/'`checks_agent.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_agent.Tpo $(DEPDIR)/libzbxpoller_a-checks_agent.Po
#	source='checks_agent.c' object='libzbxpoller_a-checks_agent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_agent.o `test -f 'checks_agent.c' || echo '$(srcdir)/'`checks_agent.c

libzbxpoller_a-checks_agent.obj: checks_agent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_agent.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_agent.Tpo -c -o libzbxpoller_a-checks_agent.obj `if test -f 'checks_agent.c'; then $(CYGPATH_W) 'checks_agent.c'; else $(CYGPATH_W) '$(srcdir)/checks_agent.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_agent.Tpo $(DEPDIR)/libzbxpoller_a-checks_agent.Po
#	source='checks_agent.c' object='libzbxpoller_a-checks_agent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_agent.obj `if test -f 'checks_agent.c'; then $(CYGPATH_W) 'checks_agent.c'; else $(CYGPATH_W) '$(srcdir)/checks_agent.c'; fi`

libzbxpoller_a-checks_internal.o: checks_internal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_internal.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_internal.Tpo -c -o libzbxpoller_a-checks_internal.o `test -f 'checks_internal.c' || echo '$(srcdir)/'`checks_internal.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_internal.Tpo $(DEPDIR)/libzbxpoller_a-checks_internal.Po
#	source='checks_internal.c' object='libzbxpoller_a-checks_internal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_internal.o `test -f 'checks_internal.c' || echo '$(srcdir)/'`checks_internal.c

libzbxpoller_a-checks_internal.obj: checks_internal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_internal.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_internal.Tpo -c -o libzbxpoller_a-checks_internal.obj `if test -f 'checks_internal.c'; then $(CYGPATH_W) 'checks_internal.c'; else $(CYGPATH_W) '$(srcdir)/checks_internal.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_internal.Tpo $(DEPDIR)/libzbxpoller_a-checks_internal.Po
#	source='checks_internal.c' object='libzbxpoller_a-checks_internal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_internal.obj `if test -f 'checks_internal.c'; then $(CYGPATH_W) 'checks_internal.c'; else $(CYGPATH_W) '$(srcdir)/checks_internal.c'; fi`

libzbxpoller_a-checks_simple.o: checks_simple.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_simple.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_simple.Tpo -c -o libzbxpoller_a-checks_simple.o `test -f 'checks_simple.c' || echo '$(srcdir)/'`checks_simple.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_simple.Tpo $(DEPDIR)/libzbxpoller_a-checks_simple.Po
#	source='checks_simple.c' object='libzbxpoller_a-checks_simple.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_simple.o `test -f 'checks_simple.c' || echo '$(srcdir)/'`checks_simple.c

libzbxpoller_a-checks_simple.obj: checks_simple.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_simple.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_simple.Tpo -c -o libzbxpoller_a-checks_simple.obj `if test -f 'checks_simple.c'; then $(CYGPATH_W) 'checks_simple.c'; else $(CYGPATH_W) '$(srcdir)/checks_simple.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_simple.Tpo $(DEPDIR)/libzbxpoller_a-checks_simple.Po
#	source='checks_simple.c' object='libzbxpoller_a-checks_simple.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_simple.obj `if test -f 'checks_simple.c'; then $(CYGPATH_W) 'checks_simple.c'; else $(CYGPATH_W) '$(srcdir)/checks_simple.c'; fi`

libzbxpoller_a-checks_simple_vmware.o: checks_simple_vmware.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_simple_vmware.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Tpo -c -o libzbxpoller_a-checks_simple_vmware.o `test -f 'checks_simple_vmware.c' || echo '$(srcdir)/'`checks_simple_vmware.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Tpo $(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Po
#	source='checks_simple_vmware.c' object='libzbxpoller_a-checks_simple_vmware.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_simple_vmware.o `test -f 'checks_simple_vmware.c' || echo '$(srcdir)/'`checks_simple_vmware.c

libzbxpoller_a-checks_simple_vmware.obj: checks_simple_vmware.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_simple_vmware.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Tpo -c -o libzbxpoller_a-checks_simple_vmware.obj `if test -f 'checks_simple_vmware.c'; then $(CYGPATH_W) 'checks_simple_vmware.c'; else $(CYGPATH_W) '$(srcdir)/checks_simple_vmware.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Tpo $(DEPDIR)/libzbxpoller_a-checks_simple_vmware.Po
#	source='checks_simple_vmware.c' object='libzbxpoller_a-checks_simple_vmware.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_simple_vmware.obj `if test -f 'checks_simple_vmware.c'; then $(CYGPATH_W) 'checks_simple_vmware.c'; else $(CYGPATH_W) '$(srcdir)/checks_simple_vmware.c'; fi`

libzbxpoller_a-checks_snmp.o: checks_snmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_snmp.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_snmp.Tpo -c -o libzbxpoller_a-checks_snmp.o `test -f 'checks_snmp.c' || echo '$(srcdir)/'`checks_snmp.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_snmp.Tpo $(DEPDIR)/libzbxpoller_a-checks_snmp.Po
#	source='checks_snmp.c' object='libzbxpoller_a-checks_snmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_snmp.o `test -f 'checks_snmp.c' || echo '$(srcdir)/'`checks_snmp.c

libzbxpoller_a-checks_snmp.obj: checks_snmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_snmp.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_snmp.Tpo -c -o libzbxpoller_a-checks_snmp.obj `if test -f 'checks_snmp.c'; then $(CYGPATH_W) 'checks_snmp.c'; else $(CYGPATH_W) '$(srcdir)/checks_snmp.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_snmp.Tpo $(DEPDIR)/libzbxpoller_a-checks_snmp.Po
#	source='checks_snmp.c' object='libzbxpoller_a-checks_snmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_snmp.obj `if test -f 'checks_snmp.c'; then $(CYGPATH_W) 'checks_snmp.c'; else $(CYGPATH_W) '$(srcdir)/checks_snmp.c'; fi`

libzbxpoller_a-checks_db.o: checks_db.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_db.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_db.Tpo -c -o libzbxpoller_a-checks_db.o `test -f 'checks_db.c' || echo '$(srcdir)/'`checks_db.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_db.Tpo $(DEPDIR)/libzbxpoller_a-checks_db.Po
#	source='checks_db.c' object='libzbxpoller_a-checks_db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_db.o `test -f 'checks_db.c' || echo '$(srcdir)/'`checks_db.c

libzbxpoller_a-checks_db.obj: checks_db.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_db.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_db.Tpo -c -o libzbxpoller_a-checks_db.obj `if test -f 'checks_db.c'; then $(CYGPATH_W) 'checks_db.c'; else $(CYGPATH_W) '$(srcdir)/checks_db.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_db.Tpo $(DEPDIR)/libzbxpoller_a-checks_db.Po
#	source='checks_db.c' object='libzbxpoller_a-checks_db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_db.obj `if test -f 'checks_db.c'; then $(CYGPATH_W) 'checks_db.c'; else $(CYGPATH_W) '$(srcdir)/checks_db.c'; fi`

libzbxpoller_a-checks_aggregate.o: checks_aggregate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_aggregate.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_aggregate.Tpo -c -o libzbxpoller_a-checks_aggregate.o `test -f 'checks_aggregate.c' || echo '$(srcdir)/'`checks_aggregate.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_aggregate.Tpo $(DEPDIR)/libzbxpoller_a-checks_aggregate.Po
#	source='checks_aggregate.c' object='libzbxpoller_a-checks_aggregate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_aggregate.o `test -f 'checks_aggregate.c' || echo '$(srcdir)/'`checks_aggregate.c

libzbxpoller_a-checks_aggregate.obj: checks_aggregate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_aggregate.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_aggregate.Tpo -c -o libzbxpoller_a-checks_aggregate.obj `if test -f 'checks_aggregate.c'; then $(CYGPATH_W) 'checks_aggregate.c'; else $(CYGPATH_W) '$(srcdir)/checks_aggregate.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_aggregate.Tpo $(DEPDIR)/libzbxpoller_a-checks_aggregate.Po
#	source='checks_aggregate.c' object='libzbxpoller_a-checks_aggregate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_aggregate.obj `if test -f 'checks_aggregate.c'; then $(CYGPATH_W) 'checks_aggregate.c'; else $(CYGPATH_W) '$(srcdir)/checks_aggregate.c'; fi`

libzbxpoller_a-checks_external.o: checks_external.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_external.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_external.Tpo -c -o libzbxpoller_a-checks_external.o `test -f 'checks_external.c' || echo '$(srcdir)/'`checks_external.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_external.Tpo $(DEPDIR)/libzbxpoller_a-checks_external.Po
#	source='checks_external.c' object='libzbxpoller_a-checks_external.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_external.o `test -f 'checks_external.c' || echo '$(srcdir)/'`checks_external.c

libzbxpoller_a-checks_external.obj: checks_external.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_external.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_external.Tpo -c -o libzbxpoller_a-checks_external.obj `if test -f 'checks_external.c'; then $(CYGPATH_W) 'checks_external.c'; else $(CYGPATH_W) '$(srcdir)/checks_external.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_external.Tpo $(DEPDIR)/libzbxpoller_a-checks_external.Po
#	source='checks_external.c' object='libzbxpoller_a-checks_external.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_external.obj `if test -f 'checks_external.c'; then $(CYGPATH_W) 'checks_external.c'; else $(CYGPATH_W) '$(srcdir)/checks_external.c'; fi`

libzbxpoller_a-checks_ipmi.o: checks_ipmi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_ipmi.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_ipmi.Tpo -c -o libzbxpoller_a-checks_ipmi.o `test -f 'checks_ipmi.c' || echo '$(srcdir)/'`checks_ipmi.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_ipmi.Tpo $(DEPDIR)/libzbxpoller_a-checks_ipmi.Po
#	source='checks_ipmi.c' object='libzbxpoller_a-checks_ipmi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_ipmi.o `test -f 'checks_ipmi.c' || echo '$(srcdir)/'`checks_ipmi.c

libzbxpoller_a-checks_ipmi.obj: checks_ipmi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_ipmi.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_ipmi.Tpo -c -o libzbxpoller_a-checks_ipmi.obj `if test -f 'checks_ipmi.c'; then $(CYGPATH_W) 'checks_ipmi.c'; else $(CYGPATH_W) '$(srcdir)/checks_ipmi.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_ipmi.Tpo $(DEPDIR)/libzbxpoller_a-checks_ipmi.Po
#	source='checks_ipmi.c' object='libzbxpoller_a-checks_ipmi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_ipmi.obj `if test -f 'checks_ipmi.c'; then $(CYGPATH_W) 'checks_ipmi.c'; else $(CYGPATH_W) '$(srcdir)/checks_ipmi.c'; fi`

libzbxpoller_a-checks_ssh.o: checks_ssh.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_ssh.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_ssh.Tpo -c -o libzbxpoller_a-checks_ssh.o `test -f 'checks_ssh.c' || echo '$(srcdir)/'`checks_ssh.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_ssh.Tpo $(DEPDIR)/libzbxpoller_a-checks_ssh.Po
#	source='checks_ssh.c' object='libzbxpoller_a-checks_ssh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_ssh.o `test -f 'checks_ssh.c' || echo '$(srcdir)/'`checks_ssh.c

libzbxpoller_a-checks_ssh.obj: checks_ssh.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_ssh.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_ssh.Tpo -c -o libzbxpoller_a-checks_ssh.obj `if test -f 'checks_ssh.c'; then $(CYGPATH_W) 'checks_ssh.c'; else $(CYGPATH_W) '$(srcdir)/checks_ssh.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_ssh.Tpo $(DEPDIR)/libzbxpoller_a-checks_ssh.Po
#	source='checks_ssh.c' object='libzbxpoller_a-checks_ssh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_ssh.obj `if test -f 'checks_ssh.c'; then $(CYGPATH_W) 'checks_ssh.c'; else $(CYGPATH_W) '$(srcdir)/checks_ssh.c'; fi`

libzbxpoller_a-checks_telnet.o: checks_telnet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_telnet.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_telnet.Tpo -c -o libzbxpoller_a-checks_telnet.o `test -f 'checks_telnet.c' || echo '$(srcdir)/'`checks_telnet.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_telnet.Tpo $(DEPDIR)/libzbxpoller_a-checks_telnet.Po
#	source='checks_telnet.c' object='libzbxpoller_a-checks_telnet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_telnet.o `test -f 'checks_telnet.c' || echo '$(srcdir)/'`checks_telnet.c

libzbxpoller_a-checks_telnet.obj: checks_telnet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_telnet.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_telnet.Tpo -c -o libzbxpoller_a-checks_telnet.obj `if test -f 'checks_telnet.c'; then $(CYGPATH_W) 'checks_telnet.c'; else $(CYGPATH_W) '$(srcdir)/checks_telnet.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_telnet.Tpo $(DEPDIR)/libzbxpoller_a-checks_telnet.Po
#	source='checks_telnet.c' object='libzbxpoller_a-checks_telnet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_telnet.obj `if test -f 'checks_telnet.c'; then $(CYGPATH_W) 'checks_telnet.c'; else $(CYGPATH_W) '$(srcdir)/checks_telnet.c'; fi`

libzbxpoller_a-checks_java.o: checks_java.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_java.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_java.Tpo -c -o libzbxpoller_a-checks_java.o `test -f 'checks_java.c' || echo '$(srcdir)/'`checks_java.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_java.Tpo $(DEPDIR)/libzbxpoller_a-checks_java.Po
#	source='checks_java.c' object='libzbxpoller_a-checks_java.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_java.o `test -f 'checks_java.c' || echo '$(srcdir)/'`checks_java.c

libzbxpoller_a-checks_java.obj: checks_java.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_java.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_java.Tpo -c -o libzbxpoller_a-checks_java.obj `if test -f 'checks_java.c'; then $(CYGPATH_W) 'checks_java.c'; else $(CYGPATH_W) '$(srcdir)/checks_java.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_java.Tpo $(DEPDIR)/libzbxpoller_a-checks_java.Po
#	source='checks_java.c' object='libzbxpoller_a-checks_java.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_java.obj `if test -f 'checks_java.c'; then $(CYGPATH_W) 'checks_java.c'; else $(CYGPATH_W) '$(srcdir)/checks_java.c'; fi`

libzbxpoller_a-checks_calculated.o: checks_calculated.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_calculated.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_calculated.Tpo -c -o libzbxpoller_a-checks_calculated.o `test -f 'checks_calculated.c' || echo '$(srcdir)/'`checks_calculated.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_calculated.Tpo $(DEPDIR)/libzbxpoller_a-checks_calculated.Po
#	source='checks_calculated.c' object='libzbxpoller_a-checks_calculated.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_calculated.o `test -f 'checks_calculated.c' || echo '$(srcdir)/'`checks_calculated.c

libzbxpoller_a-checks_calculated.obj: checks_calculated.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-checks_calculated.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-checks_calculated.Tpo -c -o libzbxpoller_a-checks_calculated.obj `if test -f 'checks_calculated.c'; then $(CYGPATH_W) 'checks_calculated.c'; else $(CYGPATH_W) '$(srcdir)/checks_calculated.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-checks_calculated.Tpo $(DEPDIR)/libzbxpoller_a-checks_calculated.Po
#	source='checks_calculated.c' object='libzbxpoller_a-checks_calculated.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-checks_calculated.obj `if test -f 'checks_calculated.c'; then $(CYGPATH_W) 'checks_calculated.c'; else $(CYGPATH_W) '$(srcdir)/checks_calculated.c'; fi`

libzbxpoller_a-poller.o: poller.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-poller.o -MD -MP -MF $(DEPDIR)/libzbxpoller_a-poller.Tpo -c -o libzbxpoller_a-poller.o `test -f 'poller.c' || echo '$(srcdir)/'`poller.c
	$(am__mv) $(DEPDIR)/libzbxpoller_a-poller.Tpo $(DEPDIR)/libzbxpoller_a-poller.Po
#	source='poller.c' object='libzbxpoller_a-poller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-poller.o `test -f 'poller.c' || echo '$(srcdir)/'`poller.c

libzbxpoller_a-poller.obj: poller.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -MT libzbxpoller_a-poller.obj -MD -MP -MF $(DEPDIR)/libzbxpoller_a-poller.Tpo -c -o libzbxpoller_a-poller.obj `if test -f 'poller.c'; then $(CYGPATH_W) 'poller.c'; else $(CYGPATH_W) '$(srcdir)/poller.c'; fi`
	$(am__mv) $(DEPDIR)/libzbxpoller_a-poller.Tpo $(DEPDIR)/libzbxpoller_a-poller.Po
#	source='poller.c' object='libzbxpoller_a-poller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxpoller_a_CFLAGS) $(CFLAGS) -c -o libzbxpoller_a-poller.obj `if test -f 'poller.c'; then $(CYGPATH_W) 'poller.c'; else $(CYGPATH_W) '$(srcdir)/poller.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
